apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose -f docker-compose-elk.yml convert
    kompose.version: 1.22.0 (955b78124)
  creationTimestamp: null
  labels:
    io.kompose.service: elasticsearch
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: elasticsearch
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose -f docker-compose-elk.yml convert
        kompose.version: 1.22.0 (955b78124)
      creationTimestamp: null
      labels:
        io.kompose.network/hobbit: "true"
        io.kompose.network/hobbit-core: "true"
        io.kompose.network/hobbit-services: "true"
        io.kompose.service: elasticsearch
    spec:
      containers:
        - args:
            - elasticsearch
            - -E
            - network.host=0.0.0.0
          image: 'docker.elastic.co/elasticsearch/elasticsearch:7.9.3'
          name: elasticsearch
          ports:
            - containerPort: 9200
            - containerPort: 9300
          resources:
            limits:
              memory: "8589934592"
          volumeMounts:
            - mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
              name: elasticsearch-claim0
              readOnly: true
            - mountPath: /usr/share/elasticsearch/config/jvm.options
              name: elasticsearch-claim1
              readOnly: true
            - mountPath: /usr/share/elasticsearch/data
              name: elasticsearch-claim2
      restartPolicy: Always
      volumes:
        - name: elasticsearch-claim0
          persistentVolumeClaim:
            claimName: elasticsearch-claim0
            readOnly: true
        - name: elasticsearch-claim1
          persistentVolumeClaim:
            claimName: elasticsearch-claim1
            readOnly: true
        - name: elasticsearch-claim2
          persistentVolumeClaim:
            claimName: elasticsearch-claim2
status: {}
